{"version":3,"sources":["views/AuthenticatedPage.jsx","views/LoginPage/FirstTimeLogin.jsx"],"names":["AuthenticatedPage","Component","withUser","withRouter","_React$Component","withAuthorization","_getPrototypeOf2","_this","Object","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_len","arguments","length","args","Array","_key","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","concat","state","isError","makeAuthenticatedAPICall","_ref","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","method","url","data","result","_result","wrap","_context","prev","next","axios","headers","x-access-token","localStorage","getItem","sent","status","abrupt","setState","t0","response","props","currentUser","refreshTokens","t1","console","log","stop","_x","_x2","_x3","getRedirectQueryString","redirectTo","qs","queryString","stringify","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","userObj","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","location","pathname","assign","loggedInUserObj","authenticatedApiCall","React","tieAuthorization","FirstTimeLogin","handleSubmit","_ref2","values","setSubmitting","password","cnfpassword","then","removeItem","resetPassworSuccess","unauthenticated","catch","error","dismissDialog","history","replace","logout","_callee2","_context2","push","handleFirstTimeLogin","handleShowPassword","showPassword","handleHidePassword","handleShowConfPassword","confPassword","showCnfPassword","handleHideConfPassword","t","formikValidation","object","shape","string","required","min","matches","oneOf","ref","language","i18n","handleTermCondition","_this2","_this$props","classes","firstTimeLoginButton","react__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","className","errorBtn","onClick","react_helmet__WEBPACK_IMPORTED_MODULE_25__","_components_Grid_GridContainer__WEBPACK_IMPORTED_MODULE_23__","style","backgroundColor","marginBottom","_components_Grid_GridItem__WEBPACK_IMPORTED_MODULE_24__","lg","md","sm","xs","marginTop","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","variant","login","formik__WEBPACK_IMPORTED_MODULE_19__","initialValues","acceptTerms","termCondition","onSubmit","validationSchema","component","FormikTextField","label","onChange","handleChange","name","fullWidth","InputProps","type","endAdornment","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","position","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_14___default","icnColor","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_15___default","color","textAlign","primaryBtn","size","_components_Card_Card_jsx__WEBPACK_IMPORTED_MODULE_16__","boxShadow","_components_Card_CardBody_jsx__WEBPACK_IMPORTED_MODULE_17__","LoginHeading","loginSuccess","_components_Card_CardFooter_jsx__WEBPACK_IMPORTED_MODULE_18__","cardFooter","_components_ErrorDialog__WEBPACK_IMPORTED_MODULE_26__","successButton","HeaderText","dismiss","withTranslation","withStyles","theme","palette","text","textPrimaryColor","primary","main","border","primaryBorder","width","borderRadius","&:hover","hoverPrimaryColor","hoverTextPrimaryColor","hoverPrimaryBorder","margin","fontWeight","lineHeight","TermsCondition","textDecoration","cursor","fontSize","fntSz_16","firstTimeLoginTitle","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","paddingTop","breakpoints","down","padTop","clrWhite","fntSze20","LoginSubHeading","justifyContent","withTheme"],"mappings":"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","file":"static/js/14.d1273307.chunk.js","sourcesContent":["import  React from \"react\";\r\nimport withUser from '../views/LoginPage/WithUser';\r\nimport _ from 'lodash';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router\";\r\nimport queryString from 'query-string'\r\n\r\n\r\nfunction tieAuthorization(Component) {\r\n  return class withAuthorization extends React.Component {\r\n    state = { isError: false }\r\n    makeAuthenticatedAPICall = async (method, url, data) => {\r\n      try {\r\n        try {\r\n          let result = await axios({\r\n            method: method,\r\n            url: url,\r\n            headers: { 'x-access-token': localStorage.getItem(\"accessToken\") },\r\n            data: data\r\n          });\r\n          if (result.status === 200) {\r\n            return result;\r\n          }\r\n          else {\r\n            this.setState({ isError: true })\r\n          }\r\n        }\r\n        catch (error) {\r\n          if (error.response.status = 401) {\r\n            await this.props.currentUser.refreshTokens();\r\n            let result = await axios({\r\n              method: method,\r\n              url: url,\r\n              headers: { 'x-access-token': localStorage.getItem(\"accessToken\") },\r\n              data: data\r\n            });\r\n            if (result.status === 200) {\r\n              return result\r\n            }\r\n            else {\r\n              this.setState({ isError: true })\r\n            }\r\n\r\n          }\r\n          throw error;\r\n        }\r\n      } catch (ex) {\r\n        console.log(\"ERROR:\", ex);\r\n        this.setState({ isError: true })\r\n      }\r\n    }\r\n    getRedirectQueryString = function (redirectTo) {\r\n      let qs = { redirectTo };\r\n      return `?${queryString.stringify(qs)}`;\r\n    }\r\n    render() {\r\n      const { currentUser: userObj } = this.props;\r\n      return (\r\n        this.state.isError ? <Redirect to={`/guest/login${this.getRedirectQueryString(this.props.location.pathname)}`} /> : <Component loggedInUserObj={userObj} authenticatedApiCall={this.makeAuthenticatedAPICall} {...this.props} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst AuthenticatedPage = () => Component => {\r\n\r\n  return withUser(withRouter(tieAuthorization(Component)));\r\n\r\n}\r\n\r\nexport default AuthenticatedPage;\r\n\r\n","import React from 'react';\r\nimport AuthenticatedPage from \"../AuthenticatedPage\";\r\nimport { withStyles, InputAdornment, Button, Typography } from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport CardBody from \"../../components/Card/CardBody.jsx\";\r\nimport CardFooter from \"../../components/Card/CardFooter.jsx\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { string, object, boolean, ref } from 'yup';\r\nimport FormikTextField from '../../components/FormikValidatedComponents/TextField';\r\nimport { withTranslation } from 'react-i18next';\r\nimport GridContainer from '../../components/Grid/GridContainer';\r\nimport GridItem from '../../components/Grid/GridItem';\r\nimport { Helmet } from \"react-helmet\";\r\nimport ErrorDialog from '../../components/ErrorDialog';\r\n\r\nconst styles = theme => ({\r\n    primaryBtn: {\r\n        color: theme.palette.text.textPrimaryColor, backgroundColor: theme.palette.primary.main, border: \"1px solid \" + theme.palette.border.primaryBorder, width: \"50%\", borderRadius: \"25px\", padding: \"10px\", marginTop: \"-35px\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.hoverPrimaryColor.main, color: theme.palette.text.hoverTextPrimaryColor, border: \"1px solid \" + theme.palette.border.hoverPrimaryBorder\r\n        }\r\n    },\r\n    errorBtn: { color: theme.palette.text.textPrimaryColor, backgroundColor: theme.palette.primary.main, border: \"1px solid \" + theme.palette.border.primaryBorder, borderRadius: \"50px\", margin: \"8px 0\", textAlign: \"right\", padding: \"6px 17px\", fontWeight: \"400\", lineHeight: \"1.42857143\", '&:hover': { backgroundColor: theme.palette.hoverPrimaryColor.main, color: theme.palette.text.hoverTextPrimaryColor, border: \"1px solid \" + theme.palette.border.hoverPrimaryBorder } },\r\n    TermsCondition: { color: \"#1a8eeb\", textDecoration: \"underline\", backgroundColor: \"transparent\", border: \"none\", textAlign: \"left\", cursor: \"pointer\", fontSize: \"16px\", padding: \"1px 10px\" },\r\n    fntSz_16: { fontSize: \"16px\" },\r\n    firstTimeLoginTitle: { color: \"#515974\", fontSize: \"18px !important\", fontWeight: \"800\" },\r\n    loginSuccess: { fontSize: \"18px\", fontWeight: \"500\", marginBottom: \"15px\" },\r\n    login: { width: \"400px\", paddingTop: \"25%\", [theme.breakpoints.down('md')]: { width: \"330px\", paddingTop: '5%' }, },\r\n    padTop: { padding: \"0 40px\", paddingTop: \"40%\", color: \"#fff\" },\r\n    clrWhite: { color: \"#fff !important\", },\r\n    fntSze20: { fontSize: \"18px !important\" },\r\n    LoginHeading: { fontSize: \"30px !important\", fontWeight: \"900 !important\", color: \"rgba(0, 0, 102, 1) !important\" },\r\n    LoginSubHeading: { fontSize: \"18px !important\", color: \"rgba(109, 111, 123, 1)  !important\", textAlign: \"left\", lineHeight: \"24px  !important\" },\r\n    cardFooter: { justifyContent: \"flex-end\", padding: 0, margin: \"30px 0 20px\" },\r\n    icnColor: { cursor: \"pointer\" }\r\n});\r\n\r\nclass FirstTimeLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const { t } = this.props;\r\n        this.formikValidation = object().shape({\r\n            password: string().required(\"This fiels is required.\").min(8, \"Password must be 8 character log.\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#_?&^+=-])[A-Za-z\\d$@$!%*#_?&^+=-]{8,}$/, \"Passqord condition.\"),\r\n            cnfpassword: string().required(\"This fiels is required.\").oneOf([ref('password')], \"Confirm password is not matching.\"),\r\n        });\r\n        this.state = {\r\n            resetPassworSuccess: true, language: this.props.i18n.language, unauthenticated: false,\r\n            handleTermCondition: false, password: \"password\", showPassword: true, confPassword: \"password\", showCnfPassword: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ((localStorage.getItem(\"accessToken\") == null) || (localStorage.getItem(\"refreshToken\") == null)) {\r\n            this.props.history.push(`../login`)\r\n        }\r\n    }\r\n    handleSubmit = async (values, { setSubmitting }) => {\r\n        await this.props.authenticatedApiCall('post', '/api/providerauthservice/changePassword', {\r\n            password: values.password,\r\n            cnfpassword: values.cnfpassword\r\n        }).then(response => {\r\n            console.log(\"response\", response)\r\n            setSubmitting(false);\r\n            if (response.data.status === 1) {\r\n                localStorage.removeItem(\"accessToken\");\r\n                localStorage.removeItem(\"refreshToken\")\r\n                this.setState({ resetPassworSuccess: false })\r\n            } else if (response.data.status === 0) {\r\n                this.setState({ unauthenticated: true })\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({ unauthenticated: true })\r\n            setSubmitting(false);\r\n            console.log(error);\r\n        });\r\n    }\r\n    //handle dismissDialog\r\n    dismissDialog = () => {\r\n        this.setState({ resetPassworSuccess: true });\r\n        this.props.history.replace(`../login`)\r\n    }\r\n    logout = async () => {\r\n        localStorage.removeItem(\"__warningPopShownForSession\")\r\n        localStorage.removeItem(\"getAccountId\")\r\n        localStorage.removeItem(\"UserAuth\")\r\n        localStorage.removeItem(\"UserObject\")\r\n\r\n        await this.props.authenticatedApiCall('get', '/api/providerauthservice/signout', null).then(response => {\r\n            if (response.status == 200) {\r\n                this.props.history.push('/public');\r\n            }\r\n        })\r\n    }\r\n    handleFirstTimeLogin = () => {\r\n        this.setState({ unauthenticated: false });\r\n        this.props.history.push('./guest')\r\n    }\r\n    handleShowPassword = () => {\r\n        this.setState({ password: \"text\", showPassword: false })\r\n    }\r\n    handleHidePassword = () => {\r\n        this.setState({ password: \"password\", showPassword: true })\r\n    }\r\n    handleShowConfPassword = () => {\r\n        this.setState({ confPassword: \"text\", showCnfPassword: false })\r\n    }\r\n    handleHideConfPassword = () => {\r\n        this.setState({ confPassword: \"password\", showCnfPassword: true })\r\n    }\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        var firstTimeLoginButton = [<Button className={classes.errorBtn} onClick={this.handleFirstTimeLogin}>ok</Button>]\r\n        var HeaderText = \"Unauthentication\";\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>\r\n                        FirstTimeLogin\r\n                    </title>\r\n                </Helmet>\r\n                <div key={this.props.i18n.language}>\r\n                    <GridContainer style={{ backgroundColor: \"#fff\", marginBottom: \"25px\" }}>\r\n                        <GridItem lg={5} md={5} sm={12} xs={12} style={{ marginTop: \"15px\", padding: '10px' }}>\r\n                            <Typography variant=\"h5\">First Time Reset Password.</Typography>\r\n                        </GridItem>\r\n                        <GridItem lg={7} md={7} sm={12} xs={12}>\r\n                            <div className={classes.login}>\r\n                                {(this.state.resetPassworSuccess ? <Formik initialValues={{ password: \"\", cnfpassword: \"\", acceptTerms: false, termCondition: false }} onSubmit={this.handleSubmit} validationSchema={this.formikValidation}\r\n                                >\r\n                                    {(props) => (\r\n                                        <Form>\r\n                                            <Field\r\n                                                component={FormikTextField}\r\n                                                label=\"Enter your New Password.\"\r\n                                                onChange={this.handleChange}\r\n                                                name=\"password\"\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                InputProps={{\r\n                                                    type: this.state.password,\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {this.state.showPassword ? <VisibilityIcon onClick={this.handleShowPassword} className={classes.icnColor} /> : <VisibilityOffIcon onClick={this.handleHidePassword} className={classes.icnColor} />}\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <p>Password rules <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>Password must be 8 character long.</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}></span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>123</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>@!$%^*()</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>≠ email</span></p>\r\n                                            <Field\r\n                                                component={FormikTextField}\r\n                                                label=\"Confirm your password.\"\r\n                                                fullWidth\r\n                                                name=\"cnfpassword\"\r\n                                                variant=\"filled\"\r\n                                                InputProps={{\r\n                                                    type: this.state.confPassword,\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {this.state.showCnfPassword ? <VisibilityIcon onClick={this.handleShowConfPassword} className={classes.icnColor} /> : <VisibilityOffIcon onClick={this.handleHideConfPassword} className={classes.icnColor} />}\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div style={{ textAlign: \"right\" }}>\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    <Button type=\"submit\" className={classes.primaryBtn} size=\"small\" > Confirm </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n\r\n                                </Formik> : <Card style={{ boxShadow: \"none\" }}>\r\n                                        <CardBody>\r\n                                            <Typography className={classes.LoginHeading}>Successfull.</Typography><br />\r\n                                            <Typography variant=\"h4\" color=\"inherit\" className={classes.loginSuccess}>Your password has been updated successfully.</Typography>\r\n                                            {/* <Typography variant=\"h4\" color=\"inherit\" className={classes.loginSuccess}>{t('common.COMMON__LOGIN_WITH_NEW_PASSWORD')}</Typography> */}\r\n                                        </CardBody>\r\n                                        <br />\r\n                                        <CardFooter className={classes.cardFooter} >\r\n                                            <Button className={classes.primaryBtn} size=\"small\" onClick={this.dismissDialog}>\r\n                                                Login\r\n                                            </Button>\r\n                                        </CardFooter>\r\n                                    </Card>)}\r\n                            </div>\r\n                        </GridItem>\r\n\r\n                    </GridContainer>\r\n                </div>\r\n                {(this.state.unauthenticated ? <ErrorDialog successButton={firstTimeLoginButton} HeaderText={HeaderText} dismiss={this.handleFirstTimeLogin} /> : \"\")}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(AuthenticatedPage()(withStyles(styles, { withTheme: true })(FirstTimeLogin)));\r\n"],"sourceRoot":""}